# Default values for balius bane
fullnameOverride: ""
nameOverride: ""

# --- Baliusd Deployment options ---
balius:
  network: mainnet
  image:
    repository: ghcr.io/demeter-run/ext-balius-instance
    tag: 33ada013c8d53ac05da21b4adb65a8b4bfe67a59
    pullPolicy: IfNotPresent
  replicas: 1
  resources:
    limits:
      cpu: "500m"
      memory: "512Mi"
    requests:
      cpu: "250m"
      memory: "256Mi"
  containerPort: 3000
  prometheusPort: 8000
  # Postgres needs ALLOW_NOSSL set to true
  postgresHost: "postgres-service"
  tolerations: []
  affinity: {}
  podLabels: {}
  podAnnotations: {}
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0
  env:
    BALIUSD_CONFIG: /etc/config/baliusd.toml
  securityContext:
    fsGroup: 1000
  # --- Prometheus PodMonitor options ---
  podmonitor:
    enabled: false
    labels: {}
  # --- Postgres Credentials ---
  postgres:
    database: balius
    usernameSecret:
      name: balius.mydb.credentials.postgresql.acid.zalan.do
      key: username
    passwordSecret:
      name: balius.mydb.credentials.postgresql.acid.zalan.do
      key: password
  # --- ServiceAccount ---
  serviceAccount:
    create: true
    annotations: {}
    labels: {}
    name: "balius"
  # --- Service ---
  service:
    annotations: {}
    labels: {}
    type: ClusterIP
    ports:
      api: 3000
      metrics: 8000
  # --- ConfigMap options ---
  configMap:
    # Dingo, Dolos or any UTXO RPC url
    utxorpc_url: "http://dolos.dolos.svc.cluster.local:50051"

# --- S3 Configuration & secret creation ---
# Secret will store only AWS_SECRET_ACCESS_KEY
s3:
  create: true
  aws_region: us-west-2
  aws_access_key_id: "AKIAXXXXXXXX"
  aws_secret_access_key: "xxxxxxxxxxxxxxxxxxxxxx"

vault:
  address: "http://vault.balius.svc.cluster.local:8200"
  token: "vault-token-placeholder"
  vault_token_renew_interval: "24h"
  vault_token_renew_seconds: "600"
